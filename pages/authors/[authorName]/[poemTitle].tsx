import Head from "next/head";
import { Alegreya } from "@next/font/google";
import Image from "next/image";
import Img from "../../../public/poetry/13.jpg";
import Link from "next/link";
import LineBreak from "@/public/linebreak.svg";

const alegreya = Alegreya({ subsets: ["latin"] });

export default function Home({ poem, poemName, authorData }: any) {
  //   console.log(authorData.thumbnail.source);
  return (
    <>
      <Head>
        <title>{poemName}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main>
        {/* Container Grid */}
        <div className="">
          {/* Poem Container ====================*/}
          <div className="lg:w-[60%] mx-auto flex flex-col items-center mb-32 z-30 rounded-xl mt-24 text-white">
            <h1
              className={`${alegreya.className} text-[4em] font-bold mt-8 mb-2`}
            >
              {poemName}
            </h1>
            <Image
              className="w-40 mb-10"
              src={LineBreak}
              alt={authorData.title}
              height={300}
              width={300}
            />
            <div className="bg-rose-100 border-2 border-slate-100 border-opacity-40 bg-opacity-20 mx-auto flex flex-col items-center  z-30 rounded-xl shadow-2xl w-full py-10">
              {/* <p className="italic font-xs slate-600 mb-4">
                By: {poem[0].author}
              </p> */}
              {poem[0].lines.map((line: string, i: number) => (
                <p className={`${alegreya.className} text-xl mb-1`} key={i}>
                  {line}
                </p>
              ))}
              <Image
                className="w-40 my-10"
                src={LineBreak}
                alt={authorData.title}
                height={300}
                width={300}
              />
              {/* Author Details */}
              <div className="flex items-center my-10 w-[60%] mx-auto">
                {authorData.thumbnail ? (
                  <Image
                    className="w-20 aspect-square object-cover object-center rounded-full mr-4 self-start"
                    src={authorData.thumbnail.source}
                    alt={authorData.title}
                    height={300}
                    width={300}
                  />
                ) : (
                  <p>No Image</p>
                )}
                <div className="">
                  <Link href={`/authors/${authorData.title}`}>
                    <p
                      className={`${alegreya.className} text-md underline underline-offset-4 decoration-white`}
                    >
                      {authorData.title}
                    </p>
                  </Link>
                  <p className={`${alegreya.className} text-md`}>
                    {authorData.extract}
                  </p>
                </div>
              </div>
            </div>
          </div>

          {/* Poem Container Ends ==============*/}
        </div>
      </main>
    </>
  );
}

export const getServerSideProps = async (context: any) => {
  let { params } = context;

  let poemRes = await fetch(`https://poetrydb.org/title/${params.poemTitle}`, {
    method: "GET",
  });
  let poem = await poemRes.json();

  let authorResponse = await fetch(
    `https://en.wikipedia.org/api/rest_v1/page/summary/${params.authorName}`,
    {
      method: "GET",
    }
  );
  let authorData = await authorResponse.json();

  console.log(authorData);

  return {
    props: {
      poem,
      poemName: params.poemTitle,
      authorData,
    },
  };
};
